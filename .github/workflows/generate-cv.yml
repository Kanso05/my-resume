name: Generate CV Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: pip install anthropic
    
    - name: Generate CVs
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        python << 'EOF'
        import anthropic, os, glob
        from pathlib import Path
        
        os.makedirs('Output', exist_ok=True)
        
        with open('Template/Cv_modern.html', 'r', encoding='utf-8') as f:
            template_content = f.read()
        
        client = anthropic.Anthropic(api_key=os.getenv('ANTHROPIC_API_KEY'))
        
        for cv_file in glob.glob('CV/*.md'):
            with open(cv_file, 'r', encoding='utf-8') as f:
                cv_content = f.read()
            
            cv_filename = Path(cv_file).stem
            
            response = client.messages.create(
                model="claude-sonnet-4-20250514",
                max_tokens=4000,
                messages=[{
                    "role": "user",
                    "content": f"""Tu es un expert en gÃ©nÃ©ration de CV professionnel. Je vais te donner un CV en markdown et un template HTML moderne.
                
                **CV en Markdown ({cv_filename}) :**
                ```markdown
                {cv_content}
                ```
                
                **Template HTML moderne :**
                ```html
                {template_content}
                ```
                
                **Instructions spÃ©cifiques :**
                1. IntÃ¨gre parfaitement le contenu markdown dans le template HTML
                2. Convertis le markdown en HTML sÃ©mantique (h1, h2, p, ul, li, strong, em, etc.)
                3. Respecte absolument la structure, les classes CSS et les styles du template
                4. Assure-toi que les sections du CV s'adaptent aux zones prÃ©vues dans le template
                5. Maintiens l'aspect moderne et professionnel du template
                6. GÃ©nÃ¨re un HTML valide et bien indentÃ©
                7. PrÃ©serve tous les styles CSS et la mise en page du template
                8. L'ordre des sections sont identiques dans le fichier markdown et le fichier html
                9. Assure toi que chaque section du fichier markdown est ajoutÃ©e dans le fichier html produit
                
                **TrÃ¨s important :** RÃ©ponds uniquement avec le code HTML final complet, sans explications, sans balises de code markdown, juste le HTML pur."""
                }]
            )
            
            html = response.content[0].text.strip()
            if html.startswith('```'):
                html = html.split('```')[1].split('```')[0].strip()
                if html.startswith('html'):
                    html = html[4:].strip()
            
            output_file = f"Output/{cv_filename}.html"
            with open(output_file, 'w', encoding='utf-8') as f:
                f.write(html)
            print(f"âœ… {output_file}")
        EOF
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: cv-${{ github.run_number }}
        name: "CV Release #${{ github.run_number }}"
        body: |
          ðŸ¤– CV gÃ©nÃ©rÃ©s automatiquement
          
          **Commit:** ${{ github.event.head_commit.message }}
          **Date:** $(date)
        files: Output/*.html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
