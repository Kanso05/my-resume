name: Generate CV from Template

on:
  push:
    paths:
      - 'CV/*.md'              # Se d√©clenche sur les changements des fichiers .md dans CV/
      - 'Template/Cv_modern.html'  # Se d√©clenche aussi sur les changements du template
    branches:
      - main

jobs:
  generate-cv:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2    # Pour comparer avec le commit pr√©c√©dent
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        pip install anthropic
    
    - name: Create Output directory if not exists
      run: mkdir -p Output
    
    - name: Detect changed CV files
      id: changed-files
      run: |
        # V√©rifier si le template a chang√©
        TEMPLATE_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep ".html" || true)
        
        if [ -n "$TEMPLATE_CHANGED" ]; then
          echo "üé® Template modifi√© - G√©n√©ration de tous les CV"
          # Si le template a chang√©, traiter tous les fichiers CV
          ALL_CV_FILES=$(find CV -name "*.md" -type f | sort)
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$ALL_CV_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          # Sinon, d√©tecter uniquement les fichiers .md modifi√©s
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep ".md" || true)
          echo "üìù Fichiers CV modifi√©s: $CHANGED_FILES"
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "changed_files<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changed_files=" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Generate CV files with Claude
      if: steps.changed-files.outputs.changed_files != ''
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
      run: python generate_cv.py
    
    - name: Commit and push changes
      run: |
        # V√©rifier s'il y a des fichiers g√©n√©r√©s
        if [ -f "/tmp/files_generated.txt" ]; then
          FILES_GENERATED=$(cat /tmp/files_generated.txt)
          
          if [ -n "$FILES_GENERATED" ]; then
            # Configuration Git
            git config --local user.email "action@github.com"
            git config --local user.name "CV Generator Bot"
            
            # Ajouter les fichiers g√©n√©r√©s
            echo "$FILES_GENERATED" | xargs git add
            
            # D√©tecter le type de changement pour le message de commit
            TEMPLATE_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep ".html" || true)
            
            if [ -n "$TEMPLATE_CHANGED" ]; then
              # Changement de template
              COMMIT_MSG="üé® R√©g√©n√©ration automatique des CV suite √† modification du template
            
            Template mis √† jour: Template/Cv_modern.html
            Fichiers r√©g√©n√©r√©s:
            $(echo "$FILES_GENERATED" | sed 's/^/- /')
            
            G√©n√©r√© le $(date '+%Y-%m-%d √† %H:%M:%S')"
            else
              # Changement de CV
              COMMIT_MSG="ü§ñ Mise √† jour automatique des CV
            
            Fichiers g√©n√©r√©s:
            $(echo "$FILES_GENERATED" | sed 's/^/- /') 
            $(echo "$FILES_GENERATED" | sed 's/^/- /') > /tmp/files_generated.txt
            G√©n√©r√© le $(date '+%Y-%m-%d √† %H:%M:%S')"
            fi
            
            # Commiter et pusher
            git commit -m "$COMMIT_MSG"
            git push
            
            echo "‚úÖ Changements committ√©s et push√©s avec succ√®s !"
          else
            echo "üí° Aucun changement √† committer"
          fi
    - name: Create Release with generated CV files
      if: success() && hashFiles('/tmp/files_generated.txt') != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: cv-${{ github.run_number }}-${{ github.sha }}
        name: "CV Release - ${{ github.event.head_commit.message }}"
        body: |
          ü§ñ G√©n√©ration automatique de CV
          
          **Commit:** ${{ github.sha }}
          **Date:** ${{ github.event.head_commit.timestamp }}
          **Message:** ${{ github.event.head_commit.message }}
          
          Fichiers g√©n√©r√©s:
          ${{ steps.get-files.outputs.files_list }}
        files: Output/*.html
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get generated files list
      id: get-files
      if: hashFiles('/tmp/files_generated.txt') != ''
      run: |
        if [ -f "/tmp/files_generated.txt" ]; then
          FILES_LIST=$(cat /tmp/files_generated.txt | sed 's/^/- /' | tr '\n' ' ')
          echo "files_list=$FILES_LIST" >> $GITHUB_OUTPUT
        fi
